---
permalink: '/embed.js'
layout: null
---
{% from "macro.njk" import icon %}

function getTheme(name = '') {
  switch(name.toLowerCase()) {
    case 'serif':
      return `{% include "embed/styles/serif.njk" %}`
    case 'tron':
      return `{% include "embed/styles/tron.njk" %}`
    case 'coder':
      return `{% include "embed/styles/coder.njk" %}`
    case 'bading':
      return `{% include "embed/styles/bading.njk" %}`
    case 'trans':
      return `{% include "embed/styles/trans.njk" %}`
    case 'plantlike':
      return `{% include "embed/styles/plantlike.njk" %}`
    case 'borderline':
      return `{% include "embed/styles/borderline.njk" %}`
    default:
      return `{% include "embed/styles/default.njk" %}`
  }
}

class WebringBanner extends HTMLElement {
  static SCHEMES = ['dark', 'light']
  static THEMES = ['serif', 'tron', 'coder', 'bading', 'trans', 'plantlike', 'borderline']

  constructor() {
      super();
      console.log('{{ meta.baseUrl }}')
      this.ringtitle = '{{ site.title }}';
      this.url = '{{ meta.baseUrl }}';
      this.image = this.url + '/assets/images/{{ site.image }}';
      this.membercount = {{ members | length}};
      
      this.memberlabel = new Intl.PluralRules('en-US').select(this.membercount) === 'one'
        ? 'member'
        : 'members'

      this.refreshAttributes()

      this.shadowObj = this.attachShadow({ mode: 'open' });
      this.render();
  }

  getStyles() {
    const baseStyle = `{% include "embed/base-style.njk" %}`
    const theme = getTheme(this.theme)
    console.log(this.theme)
    
    return `
      <style>${baseStyle} ${theme}</style>
    `;
  }

  getTemplate() {
      return `
        ${this.getStyles()}
        {% include "embed/webring-banner.njk" %}
`;
  }

  render() {
      this.shadowObj.innerHTML = this.getTemplate();
  }

  static get observedAttributes() {
    return ['scheme', 'theme']
  }

  attributeChangedCallback(name, oldValue, newValue) {
    this.refreshAttributes()
    this.render()
  }

  refreshAttributes() {
    const scheme = this.getAttribute('scheme')
    const schemeIsValid = WebringBanner.SCHEMES.includes(scheme)
    this.scheme =  scheme !=  null && schemeIsValid
      ? scheme
      : ''

    const theme = this.getAttribute('theme')
    const themeIsValid = WebringBanner.THEMES.includes(theme)
    this.theme = theme != null && themeIsValid
      ? theme
      : ''

  }
}

customElements.define('webring-banner', WebringBanner);
